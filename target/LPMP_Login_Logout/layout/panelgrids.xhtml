<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml" xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://bootsfaces.net/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets">

		<ui:define name="content">
			<h1>Panel grids</h1>
			<p>
				Using a panel grid is a convenient way to display a couple of input
				fields. BootsFaces aligns your input fields automatically. You don't
				have to care about
				<code>&lt;b:row&gt;</code>
				and
				<code>&lt;b:col&gt;</code>
				. BootsFaces panel grid adds these tags automatically for you.
			</p>
			<p>
				The difference to a standard JSF
				<code>&lt;h:panelGrid&gt;</code>
				is that standard JSF generates a table instead of Bootstrap-friendly
				<code>row</code>
				and
				<code>col</code>
				divs.
			</p>
			<h3>Basic example</h3>
			<p>
				The attribute
				<code>colSpan</code>
				of
				<code>&lt;b:panelGrid /&gt;</code>
				takes the a comma-separated list of numbers. Each number defines how
				many Bootstrap columns a
				<code>&lt;b:panelGrid /&gt;</code>
				column spans.
			</p>
            
            <b:panel title="Live preview" look="info" collapsible="false">
                <h:form>
                    <b:panelGrid colSpans="2,10" size="xs" contentDisabled="#{columnsBean.containerDisabled}" id="panelGridId">
                        <h:outputLabel value="Value 1" />
                        <b:inputText span="8" value="#{settingsBean.value1}" />
                        <h:outputLabel value="Value 2" />
                        <b:inputText span="10" value="#{settingsBean.value2}" />
                        <h:outputLabel value="Checkbox 1" />
                        <b:selectBooleanCheckbox value="#{settingsBean.checkbox1}" />
                        <h:outputLabel value="Checkbox 2" />
                        <b:selectBooleanCheckbox value="#{settingsBean.checkbox2}" />
                    </b:panelGrid>
                    <b:panel look="primary" title="Options">
                        <b:switch on-text="true" off-text="default" value="#{columnsBean.containerDisabled}"
                                  update="panelGridId" onchange="ajax:columnsBean.onChange()" 
                                  label="b:panelGrid contentDisabled=" />
                    </b:panel>
                </h:form>
                
                <f:facet name="footer">
                    <strong>JSF markup: </strong>
                    <b:panel>
<script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
<h:form>
	<b:panelGrid colSpans="2,10" size="xs">
		<h:outputLabel value="Value 1" />
		<b:inputText span="8" value="# {settingsBean.value1}"/>
		<h:outputLabel value="Value 2" />
		<b:inputText span="10" value="# {settingsBean.value2}"  />
		<h:outputLabel value="Checkbox 1" />
		<b:selectBooleanCheckbox value="# {settingsBean.cb1}" />
		<h:outputLabel value="Checkbox 2" />
		<b:selectBooleanCheckbox value="# {settingsBean.cb2}" />
	</b:panelGrid>
</h:form>
]]>
</script>
                    </b:panel>
                </f:facet>
            </b:panel>

			<p>colSpan="2,10" means the content of the &lt;b:panelGrid&gt; is
				arranged in to columns. The first colum takes 2 Bootstrap columns
				(16% of the available space), the second column take the remaining
				10 Bootstrap columns (83% of the available space).</p>

            <br/>
            <h2>Reference section</h2>
            <ui:include src="PanelGridAttributes.xhtml" />
			<b:panel look="info">
				<f:facet name="heading">
					<b>Skinning</b>
				</f:facet>
					<p><code>&lt;b:panelGrid&gt;</code> uses the standard Bootstrap CSS classes:</p>
					<ul>
					<li>The panelgrid is a <code>div</code> bearing the CSS class <code>container</code>.</li>
					<li>Each row is a <code>div</code> bearing the CSS class <code>row</code>.</li>
					<li>Each column is a <code>div</code> bearing the CSS class <code>col-lg-1</code> - <code>col-lg-12</code>.</li>
					</ul>
			</b:panel>


			<br />
			<br />
			<br />
			<script type="text/javascript">
                    SyntaxHighlighter.all();
                </script>
		</ui:define>
	</ui:composition>
